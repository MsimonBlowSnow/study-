DOM-->Document Object Model
	DOM定义了表示和修改文档所需要的方法。DOM对象即为宿主对象，
	有浏览器厂商定义，用来操作html和xml功能的一类对象集合。也有人称DOM是
	HTML和XML的标准编程接口。document不能操作css。能改变行样式表。
DOM基本操作:
	1.对结点的增删改查。
		document 代表整个文档。<html>标签的父标签。
		document.getElementById()//元素在ie8以下的浏览器，不区分id大小写，而且匹配name属性的元素。
		document.getElementsByTagName()//标签名,返回类数组。
		document.getElementsByName()//注意，只有部分标签name可生效(表单，img，iframe)
		getElementsByClassName()//类名-->ie8和ie8以下的ie版本中没有，
		.querySelector() // css选择器 在ie7和ie7以下版本中没有
		.querySelectorAll()	//css选择器 在ie7和ie7以下的版本中没有。
	document.querySelector("a");//选出来的是一个元素，符合条件的第一个	
	document.querySelectorAll("a");//选出来的是一组元素。

getElementById 不常用，因为，后端可能会改前段ID
getElementByClassName 不常用 ie8与ie8以下的浏览器不兼容
querySelector和querySelectorAll 也不常用，这是静态的,时实行不好

	时实行，当你选择一个元素组，删除里面一个元素，选择的也会变
	例如
		<a></a>
		<a id="a1"></a>
		var a=document.getElementsByTagName("a");
		console.log(a);	//a,a1
		var a1=document.getElementById("a1");
		a1.remove();
		console.log(a);	//a
	静态
		<a></a>
		<a></a>
		<a></a>
		var a = document.querySelectorAll(a);
		a[0].remove();
		console.log(a);//a，a，a

遍历节点数:
	parentNode->父节点,顶层是doucment节点
	childNodes->子节点,包括所有节点(文本，元素节点等等)
	firstChild->第一个子节点，包括所有节点(文本，元素节点等等)
	lastChild->最后一个子节点,同上
	nextSibling->后一个兄弟节点,同上
	previousSibling->前一个兄弟节点，同上
基于元素节点树的遍历
	parentElement->返回当前元素的父节点,顶层是html节点(IE9以下不兼容)
	children->只返回当前元素子节点
	node.childElementCount === node.children.length当前元素节点的子元素节点个数(IE9以下不兼容)
	firstElementChild->返回的是第一个元素节点(IE9以下不兼容)
	lastElementChild->返回的是最后一个元素节点(IE9以下不兼容)
	nextElementSibling/previousElementSibling->返回后一个/前一个兄弟元素节点(IE9以下不兼容)
	
节点的种类(nodeType返回值)：
	元素节点---1
	属性节点--2
	文本节点--3
	注释节点--8
	doucment--9
	DocumentFragment---11

节点的四个属性:
	nodeName:元素标签名,只读不能写。
	nodeValue:text节点或者comment节点的文本内容，可读写
	nodeType ：该结点的类型，只读
	attributes：Element 节点的属性集合
节点的一个方法:Node.hasChildNode();包括所有节点,不包括属性节点。


例题定义一个方法返回所有的元素节点，不能用childern
	
	function reElement(target){
		var a={
			length :0,
			push : Array.prototype.push
			splice：Array.prototype.splice
		};
		childsNode = target.childNodes;
		for(var i=0;i<childsNode.len;i++){
			if(childsNode[i].nodeType == 1)
				a.push(childsNode[i])
		return a;
	}
IE9与IE9以下内核是Trident
	
	document->HTMLDOcument ——>
	HtmlDocument={
		__proto__：Document.prototype.
	}
	
DOM结构数请看图片DOM结构树.jpg
	如图:
		HTMLHeadElement.__proto__=HTMLELement
		HTMLHeadElement.__proto__.__proto__=Element
		HTMLHeadElement.__proto__.__proto__.__proto__=Node;

方法的定义:
	1.getElementById方法定义在Document.prototype上，即Element节点不能使用
	2.getElementsByName方法定义在HTMLDocument.prototype上，即非html中的document不能使用(XML document,Element不能用);
	3.getElementsByTagName方法定义在Document.prototype和 Element.prototype上
	4.HTMLDocument.prototype定义了一些常用的属性，body,head,分别指代HTML文档中的<body><head>标签。
	5.Document.prototype上定义了documentELement属性，指代文档的根元素，在HTML文档中，他总是指代<html>元素
	6.getElementsByClassName,querySelectorAll,querySelector在Document.prototype,Element.prototype类中均有定义。
